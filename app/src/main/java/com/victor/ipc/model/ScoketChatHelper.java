package com.victor.ipc.model;import android.content.Context;import android.os.Handler;import android.os.HandlerThread;import android.os.Message;import android.util.Log;import com.victor.ipc.data.User;import com.victor.ipc.util.ChatAction;import com.victor.ipc.util.Constant;import java.util.HashMap;/** * Created by victor on 2016/1/21. */public class ScoketChatHelper {    private String TAG = "ScoketChatHelper";    private Context mContext;    private Handler mSocketHandler;    private HandlerThread mSocketHandlerThread;    public ScoketChatHelper(Context context) {        mContext = context;        startRequestTask ();    }    private void startRequestTask (){        mSocketHandlerThread = new HandlerThread("ScoketChatTask");        mSocketHandlerThread.start();        mSocketHandler = new Handler(mSocketHandlerThread.getLooper()){            @Override            public void handleMessage(Message msg) {                User user = null;                switch (msg.what) {                    case Constant.Action.LOGIN:                        HashMap<Integer,Object> loginMap = (HashMap<Integer, Object>) msg.obj;                        user = (User) loginMap.get(Constant.Action.LOGIN);                        ChatAction.login(user);                        break;                    case Constant.Action.REGIST:                        HashMap<Integer,Object> registMap = (HashMap<Integer, Object>) msg.obj;                        user = (User) registMap.get(Constant.Action.REGIST);                        ChatAction.regist(user);                        break;                    case Constant.Action.CHAT:                        HashMap<Integer,Object> chatMap = (HashMap<Integer, Object>) msg.obj;                        String message = (String) chatMap.get(Constant.Action.REGIST);                        ChatAction.regist(user);                        break;                }            }        };    }    public void sendRequestWithParms (int action,Object requestData) {        HashMap<Integer, Object> requestMap = new HashMap<Integer, Object>();        requestMap.put(action, requestData);        Message msg = mSocketHandler.obtainMessage(action,requestMap);        mSocketHandler.sendMessage(msg);    }    public void sendRequest (int msg) {        mSocketHandler.sendEmptyMessage(msg);    }    public void onDestroy (){        if (mSocketHandlerThread != null) {            mSocketHandlerThread.quit();            mSocketHandlerThread = null;        }    }}